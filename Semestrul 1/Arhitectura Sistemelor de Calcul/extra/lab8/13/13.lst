     1                                  ; Sa se citeasca de la tastatura doua numere a si b (in baza 10) si sa se calculeze: (a+b) * (a-b). Rezultatul inmultirii se va salva in memorie in variabila "rezultat" (definita in segmentul de date). 
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit, scanf, printf
     6                                  import exit msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 00000000                    a dd 0
    12 00000004 00000000                    b dd 0
    13 00000008 0000000000000000            rezultat dq 0
    14 00000010 61203D2000                  mesaj_a db "a = ", 0
    15 00000015 62203D2000                  mesaj_b db "b = ", 0
    16 0000001A 256400                      format db "%d", 0
    17 0000001D 52657A756C74617475-         afisare_rezultat db "Rezultatul este %d", 0
    17 00000026 6C2065737465202564-
    17 0000002F 00                 
    18                                  
    19                                  segment code use32 class=code
    20                                      start:
    21                                      
    22                                          ; a = 
    23 00000000 68[10000000]                    push dword mesaj_a
    24 00000005 FF15[00000000]                  call [printf]
    25 0000000B 83C404                          add esp, 1*4
    26                                          
    27                                          ; citire a
    28 0000000E 68[00000000]                    push dword a
    29 00000013 68[1A000000]                    push dword format
    30 00000018 FF15[00000000]                  call [scanf]
    31 0000001E 83C408                          add esp, 2*4
    32                                          
    33                                          ; b = 
    34 00000021 68[15000000]                    push dword mesaj_b
    35 00000026 FF15[00000000]                  call [printf]
    36 0000002C 83C404                          add esp, 1*4
    37                                          
    38                                          ; citire b
    39 0000002F 68[04000000]                    push dword b 
    40 00000034 68[1A000000]                    push dword format
    41 00000039 FF15[00000000]                  call [scanf]
    42 0000003F 83C408                          add esp, 2*4
    43                                          
    44                                          ; (a + b) * (a - b)
    45 00000042 A1[00000000]                    mov eax, [a]
    46 00000047 0305[04000000]                  add eax, [b]
    47 0000004D 8B1D[00000000]                  mov ebx, [a]
    48 00000053 2B1D[04000000]                  sub ebx, [b]
    49 00000059 F7E3                            mul ebx       ; edx:eax -> (a + b) * (a - b)
    50 0000005B A3[08000000]                    mov [rezultat], eax
    51 00000060 8915[0C000000]                  mov [rezultat+4], edx
    52                                  
    53 00000066 FF35[0C000000]                  push dword [rezultat+4]
    54 0000006C FF35[08000000]                  push dword [rezultat]
    55 00000072 68[1D000000]                    push dword afisare_rezultat
    56 00000077 FF15[00000000]                  call [printf]
    57 0000007D 83C40C                          add esp, 3*4
    58                                              
    59 00000080 6A00                        push dword 0
    60 00000082 FF15[00000000]              call [exit]
