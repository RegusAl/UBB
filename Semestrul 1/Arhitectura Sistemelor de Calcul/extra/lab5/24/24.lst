     1                                  ; Se dau 2 siruri de octeti A si B. Sa se construiasca sirul R care sa contina elementele lui B in ordine inversa urmate de elementele in ordine inversa ale lui A.
     2                                  ;   Exemplu:
     3                                  ;   A: 2, 1, -3, 0
     4                                  ;   B: 4, 5, 7, 6, 2, 1
     5                                  ;   R: 1, 2, 6, 7, 5, 4, 0, -3, 1, 2
     6                                  bits 32
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 0201FD00                    a db 2, 1, -3, 0
    14                                      len_a equ $-a
    15 00000004 040507060201                b db 4, 5, 7, 6, 2, 1
    16                                      len_b equ $-b
    17 0000000A 00<rept>                    r times len_a+len_b db 0
    18                                      
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 BF00000000                      mov edi, 0
    22                                          
    23                                          ; sir b
    24 00000005 B906000000                      mov ecx, len_b
    25 0000000A E314                            jecxz peste
    26 0000000C BE00000000                      mov esi, 0
    27                                          repeta_b:
    28 00000011 8A81[03000000]                      mov al, [b+ecx-1]
    29 00000017 8887[0A000000]                      mov [r+edi], al
    30 0000001D 47                                  inc(edi)
    31 0000001E E2F1                            loop repeta_b
    32                                          
    33                                      peste:
    34                                      
    35                                          ; sir a
    36 00000020 B904000000                      mov ecx, len_a
    37 00000025 E314                            jecxz final
    38 00000027 BE00000000                      mov esi, 0
    39                                          repeta_a:
    40 0000002C 8A81[FFFFFFFF]                      mov al, [a+ecx-1]
    41 00000032 8887[0A000000]                      mov [r+edi], al
    42 00000038 47                                  inc(edi)
    43 00000039 E2F1                            loop repeta_a
    44                                          
    45                                      final:
    46 0000003B 6A00                        push dword 0
    47 0000003D FF15[00000000]              call [exit]
