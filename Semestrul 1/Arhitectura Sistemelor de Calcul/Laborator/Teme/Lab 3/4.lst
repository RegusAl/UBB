     1                                  ; interpretare cu semn
     2                                  bits 32
     3                                  
     4                                  global start
     5                                  
     6                                  extern exit
     7                                  import exit msvcrt.dll
     8                                  
     9                                  ; a-doubleword; b,c-byte; x-qword
    10                                  segment data use32 class=data
    11 00000000 D85F0000                    a dd 24536
    12 00000004 2D                          b db 45
    13 00000005 0F                          c db 15 
    14 00000006 5000000000000000            x dq 80
    15                                  
    16                                  ; 11. (a+b)/(2-b*b+b/c)-x
    17                                  segment code use32 class=code
    18                                      start:  
    19                                          
    20                                          ; a + b
    21 00000000 A0[04000000]                    mov al, [b]       ; al = b
    22 00000005 6698                            cbw                  ; al --> ax            
    23 00000007 98                              cwde                ; ax --> eax
    24                                          
    25 00000008 0305[00000000]                  add eax, [a]     ; eax = a + b
    26 0000000E 50                              push eax 
    27                                          
    28                                          ; b * b
    29 0000000F A0[04000000]                    mov al, [b]
    30 00000014 F62D[04000000]                  imul byte [b]   ; ax = b * b
    31                                          
    32                                          ; 2 - (b * b)
    33 0000001A 66BB0200                        mov bx, 2
    34 0000001E 6629C3                          sub bx, ax        ; bx = 2 - ax
    35                                          
    36                                          ; b / c
    37 00000021 A0[04000000]                    mov al, [b]
    38 00000026 6698                            cbw                     ; al --> ax
    39 00000028 F63D[05000000]                  idiv byte [c]       ; al = ax / c, ah = ax % c
    40                                          
    41                                          ; 2 - (b * b) + (b / c)
    42 0000002E 6698                            cbw                    ; al --> ax
    43 00000030 6601C3                          add bx, ax         ; bx = bx + ax
    44                                          
    45                                          ; (a+b) / (2-b*b+b/c)
    46 00000033 6658                            pop ax
    47 00000035 665A                            pop dx              ; dx:ax = a + b
    48 00000037 66F7FB                          idiv word bx     ; dx:ax % bx = dx, dx:ax / bx = ax    
    49                                          
    50 0000003A 98                              cwde     ; ax --> eax
    51 0000003B 99                              cdq        ; eax --> edx:eax
    52                                          
    53 0000003C 2B05[06000000]                  sub eax, dword [x]         
    54 00000042 1B15[0A000000]                  sbb edx, dword [x + 4]     ; edx:eax = (a+b) / (2-b*b+b/c) - x
    55                                           
    56 00000048 6A00                            push dword 0
    57 0000004A FF15[00000000]                  call [exit]
