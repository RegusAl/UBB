     1                                  ; Se citesc de la tastatura trei numere a, m si n (a: word, 0 <= m, n <= 15, m > n). Sa se izoleze bitii de la m-n ai lui a si sa se afiseze numarul intreg reprezentat de acesti bitii in baza 10. 
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern printf, scanf, exit
     6                                  import printf msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import exit msvcrt.dll
     9                                  
    10                                  segment data use32 class=data   
    11 00000000 00000000                   a dd 0
    12 00000004 00000000                   m dd 0
    13 00000008 00000000                   n dd 0
    14 0000000C 61203D2000                 mesaj_a db "a = ", 0
    15 00000011 6D203D2000                 mesaj_m db "m = ", 0
    16 00000016 6E203D2000                 mesaj_n db "n = ", 0
    17 0000001B 256400                     format_dec db "%d", 0
    18                                     
    19                                      
    20                                      
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24                                          
    25                                          ; a = 
    26 00000000 68[0C000000]                    push dword mesaj_a
    27 00000005 FF15[00000000]                  call [printf]
    28 0000000B 83C404                          add esp, 1*4
    29                                          
    30                                          ; citim a
    31 0000000E 68[00000000]                    push dword a
    32 00000013 68[1B000000]                    push dword format_dec
    33 00000018 FF15[00000000]                  call [scanf]
    34 0000001E 83C408                          add esp, 2*4
    35                                          
    36                                          ; m = 
    37 00000021 68[11000000]                    push dword mesaj_m
    38 00000026 FF15[00000000]                  call [printf]
    39 0000002C 83C404                          add esp, 1*4
    40                                          
    41                                          ; citim m
    42 0000002F 68[04000000]                    push dword m
    43 00000034 68[1B000000]                    push dword format_dec
    44 00000039 FF15[00000000]                  call [scanf]
    45 0000003F 83C408                          add esp, 2*4
    46                                          
    47                                          ; n = 
    48 00000042 68[16000000]                    push dword mesaj_n
    49 00000047 FF15[00000000]                  call [printf]
    50 0000004D 83C404                          add esp, 1*4
    51                                          
    52                                          ; citim n
    53 00000050 68[08000000]                    push dword n
    54 00000055 68[1B000000]                    push dword format_dec
    55 0000005A FF15[00000000]                  call [scanf]
    56 00000060 83C408                          add esp, 2*4
    57                                          
    58                                          ; m - n
    59 00000063 A1[00000000]                    mov eax, [a]
    60 00000068 B920000000                      mov ecx, 32
    61 0000006D 2B0D[04000000]                  sub ecx, [m]
    62                                          repeta_l:
    63 00000073 D1E0                                shl eax, 1
    64 00000075 E2FC                            loop repeta_l
    65                                          
    66 00000077 B920000000                      mov ecx, 32
    67 0000007C 2B0D[04000000]                  sub ecx, [m]
    68 00000082 2B0D[08000000]                  sub ecx, [n]
    69                                          repeta_r:
    70 00000088 D1E8                                shr eax, 1
    71 0000008A E2FC                            loop repeta_r
    72                                          
    73                                          ;afisare eax
    74 0000008C 50                              push eax
    75 0000008D 68[1B000000]                    push dword format_dec
    76 00000092 FF15[00000000]                  call [printf]
    77 00000098 83C408                          add esp, 2*4
    78                                          
    79                                          
    80                                          
    81                                          
    82 0000009B 6A00                        push dword 0
    83 0000009D FF15[00000000]              call [exit]
