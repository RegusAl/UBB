     1                                  ; Se dau un nume de fisier si un text (definite in segmentul de date). Textul contine litere mici si spatii. Sa se inlocuiasca toate literele de pe pozitii pare cu numarul pozitiei. Sa se creeze un fisier cu numele 
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit, fopen, fprintf, fclose, printf
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 6669736965722E7478-         nume_fisier db "fisier.txt", 0
    13 00000009 7400               
    14 0000000B 7700                        mod_acces db "w", 0
    15 0000000D FFFFFFFF                    descriptor_fisier dd -1
    16 00000011 416E6120617265206D-         text db "Ana are mere si pere", 0
    16 0000001A 657265207369207065-
    16 00000023 726500             
    17                                      len equ $-text
    18 00000026 256300                      format_char db "%c", 0
    19 00000029 256400                      format_dec db "%d", 0
    20 0000002C 00                          poz db 0
    21                                     
    22                                  segment code use32 class=code
    23                                      start:
    24                                      
    25                                          ; deschidere fisier
    26 00000000 68[0B000000]                    push dword mod_acces
    27 00000005 68[00000000]                    push dword nume_fisier
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp, 2*4
    30                                          
    31                                          ; verificare
    32 00000013 A3[0D000000]                    mov [descriptor_fisier], eax
    33 00000018 83F800                          cmp eax, 0
    34 0000001B 7464                            je final
    35                                          
    36 0000001D BE00000000                      mov esi, 0
    37 00000022 FC                              cld
    38 00000023 B90A000000                      mov ecx, len/2
    39 00000028 E357                            jecxz final
    40                                          
    41                                          repeta:
    42 0000002A 51                                  push ecx
    43                                              
    44 0000002B 56                                  push dword esi
    45 0000002C 68[29000000]                        push dword format_dec
    46 00000031 FF35[0D000000]                      push dword [descriptor_fisier]
    47 00000037 FF15[00000000]                      call [fprintf]
    48 0000003D 83C40C                              add esp, 3*4
    49                                              
    50 00000040 46                                  inc(esi)
    51                                              
    52 00000041 FFB6[11000000]                      push dword [text+esi]
    53 00000047 68[26000000]                        push dword format_char
    54 0000004C FF35[0D000000]                      push dword [descriptor_fisier]
    55 00000052 FF15[00000000]                      call [fprintf]
    56 00000058 83C40C                              add esp, 3*4
    57                                              
    58 0000005B 46                                  inc(esi)
    59                                              
    60 0000005C 59                                  pop ecx
    61                                              
    62 0000005D E2CB                            loop repeta
    63                                          
    64 0000005F BB01000000                      mov ebx, 1
    65 00000064 F7C315000000                    test ebx, len
    66 0000006A 7415                            jz final
    67                                          
    68 0000006C 56                              push dword esi
    69 0000006D 68[29000000]                    push dword format_dec
    70 00000072 FF35[0D000000]                  push dword [descriptor_fisier]
    71 00000078 FF15[00000000]                  call [fprintf]
    72 0000007E 83C40C                          add esp, 3*4
    73                                         
    74                                      final:
    75 00000081 FF35[0D000000]                  push dword [descriptor_fisier]
    76 00000087 FF15[00000000]                  call [fclose]
    77 0000008D 83C404                          add esp, 1*4
    78                                          
    79 00000090 6A00                        push dword 0
    80 00000092 FF15[00000000]              call [exit]
