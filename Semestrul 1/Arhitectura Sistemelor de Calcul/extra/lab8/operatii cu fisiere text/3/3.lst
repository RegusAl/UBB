     1                                  ;  Se da un fisier text. Sa se citeasca continutul fisierului, sa se contorizeze numarul de cifre pare si sa se afiseze aceasta valoare. Numele fisierului text este definit in segmentul de date. 
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit, fopen, fread, printf, fclose
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fread msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 63696672655F706172-         nume_fisier db "cifre_pare.txt", 0
    13 00000009 652E74787400       
    14 0000000F 7200                        mod_acces db "r", 0
    15 00000011 FFFFFFFF                    descriptor_fisier dd -1
    16                                      len equ 100
    17 00000015 00<rept>                    text times len db 0
    18 00000079 303234363800                cifre_pare db "02468", 0
    19 0000007F 54657874756C20636F-         afisare_format db "Textul contine %d cifre pare", 0
    19 00000088 6E74696E6520256420-
    19 00000091 636966726520706172-
    19 0000009A 6500               
    20                                     
    21                                  segment code use32 class=code
    22                                      start:
    23                                     
    24                                          ; deschidere fisier
    25 00000000 68[0F000000]                    push dword mod_acces
    26 00000005 68[00000000]                    push dword nume_fisier
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp, 2*4
    29                                          
    30                                          ; verificare continu fisier
    31 00000013 A3[11000000]                    mov [descriptor_fisier], eax
    32 00000018 83F800                          cmp eax, 0
    33 0000001B 746B                            je final
    34                                          
    35                                          ; citire din fisier
    36 0000001D FF35[11000000]                  push dword [descriptor_fisier]
    37 00000023 6A64                            push dword len
    38 00000025 6A01                            push dword 1
    39 00000027 68[15000000]                    push dword text
    40 0000002C FF15[00000000]                  call [fread]
    41 00000032 83C410                          add esp, 4*4
    42                                      
    43                                          ; inchidere fisier
    44 00000035 FF35[11000000]                  push dword [descriptor_fisier]
    45 0000003B FF15[00000000]                  call [fclose]
    46 00000041 83C404                          add esp, 1*4
    47                                          
    48                                          ; numarare cifre pare
    49 00000044 BE00000000                      mov esi, 0
    50 00000049 FC                              cld
    51 0000004A BB00000000                      mov ebx, 0
    52                                    
    53                                          repeta:
    54                                                  
    55 0000004F B905000000                          mov ecx, 5
    56 00000054 BF00000000                          mov edi, 0
    57                                              numere_pare_loop:
    58 00000059 8A97[79000000]                          mov dl, [cifre_pare+edi]
    59 0000005F 3896[15000000]                          cmp [text+esi], dl
    60 00000065 7405                                    je cifra_para
    61 00000067 47                                      inc(edi)
    62 00000068 E2EF                                loop numere_pare_loop
    63                                          
    64 0000006A EB03                                jmp peste
    65                                              
    66                                              cifra_para:
    67 0000006C 83C301                                  add ebx, 1
    68                                              
    69                                              peste:
    70 0000006F 46                                      inc(esi)
    71                                              
    72 00000070 80BE[15000000]00                cmp byte [text+esi], 0
    73 00000077 75D6                            jne repeta   
    74                                  
    75 00000079 53                              push ebx
    76 0000007A 68[7F000000]                    push dword afisare_format
    77 0000007F FF15[00000000]                  call [printf]
    78 00000085 83C408                          add esp, 2*4
    79                                          
    80                                      final:
    81                                      
    82 00000088 6A00                        push dword 0
    83 0000008A FF15[00000000]              call [exit]
