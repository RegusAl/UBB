     1                                  ; Sa se citeasca de la tastatura doua numere (in baza 10) si sa se calculeze produsul lor. 
     2                                  ; Rezultatul inmultirii se va salva in memorie in variabila "rezultat" (definita in segmentul de date). 
     3                                  bits 32
     4                                  global start
     5                                  
     6                                  extern exit, printf, scanf
     7                                  import exit msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 00000000                    a dd 0
    13 00000004 00000000                    b dd 0
    14 00000008 00000000<rept>              rezultat times 2 dd 0
    15 00000010 256400                      format db "%d", 0
    16 00000013 61203D2000                  mesaj_a db "a = ", 0
    17 00000018 62203D2000                  mesaj_b db "b = ", 0
    18 0000001D 52657A756C74617475-         format_quad db "Rezultatul este: %lld", 0
    18 00000026 6C20657374653A2025-
    18 0000002F 6C6C6400           
    19                                  
    20                                  segment code use32 class=code
    21                                      start:
    22                                              
    23                                          ; a =     
    24 00000000 68[13000000]                    push dword mesaj_a
    25 00000005 FF15[00000000]                  call [printf]
    26 0000000B 83C404                          add esp, 1*4
    27                                          
    28                                          ; citirea numarului a
    29 0000000E 68[00000000]                    push dword a
    30 00000013 68[10000000]                    push dword format
    31 00000018 FF15[00000000]                  call [scanf]
    32 0000001E 83C408                          add esp, 2*4
    33                                  
    34                                          ; b = 
    35 00000021 68[18000000]                    push dword mesaj_b
    36 00000026 FF15[00000000]                  call [printf]
    37 0000002C 83C404                          add esp, 1*4
    38                                          
    39                                          ; citirea numarului b
    40 0000002F 68[04000000]                    push dword b
    41 00000034 68[10000000]                    push dword format
    42 00000039 FF15[00000000]                  call [scanf]
    43 0000003F 83C408                          add esp, 2*4
    44                                  
    45                                          ; rezultat = a * b
    46 00000042 A1[00000000]                    mov eax, [a]
    47 00000047 F72D[04000000]                  imul dword [b]
    48 0000004D A3[08000000]                    mov dword [rezultat], eax
    49 00000052 8915[0C000000]                  mov dword [rezultat+4], edx
    50                                          
    51                                          ; afisare rezultat
    52 00000058 FF35[0C000000]                  push dword [rezultat+4]
    53 0000005E FF35[08000000]                  push dword [rezultat]
    54 00000064 68[1D000000]                    push dword format_quad
    55 00000069 FF15[00000000]                  call [printf]
    56 0000006F 83C40C                          add esp, 3*4
    57                                      
    58 00000072 6A00                        push dword 0
    59 00000074 FF15[00000000]              call [exit]
    60                                  
    61                                  
