     1                                  ; Se da un sir de octeti S. Sa se construiasca un sir D1 care sa contina toate numerele pozitive si un sir D2 care sa contina toate numerele negative din S.
     2                                  ;   Exemplu:
     3                                  ;    S: 1, 3, -2, -5, 3, -8, 5, 0
     4                                  ;   D1: 1, 3, 3, 5, 0
     5                                  ;   D2: -2, -5, -8
     6                                  bits 32
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 0103FEFB03F80500            s db 1, 3, -2, -5, 3, -8, 5, 0
    14                                      len equ $-s
    15 00000008 00<rept>                    d1 times len db 0
    16 00000010 00<rept>                    d2 times len db 0
    17                                      
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B908000000                      mov ecx, len
    21 00000005 E32C                            jecxz final
    22 00000007 BA00000000                      mov edx, 0
    23 0000000C BE00000000                      mov esi, 0
    24 00000011 BF00000000                      mov edi, 0
    25                                          repeta:
    26 00000016 8A82[00000000]                      mov al, [s+edx]
    27 0000001C 3C00                                cmp al, 0
    28 0000001E 7C09                                jl negative
    29 00000020 8886[08000000]                          mov [d1+esi], al
    30 00000026 46                                      inc(esi)
    31 00000027 EB07                                    jmp peste
    32                                              negative:
    33 00000029 8887[10000000]                          mov [d2+edi], al
    34 0000002F 47                                      inc(edi)
    35                                          peste:
    36 00000030 42                              inc(edx)
    37 00000031 E2E3                            loop repeta
    38                                          
    39                                          
    40                                      final:
    41 00000033 6A00                        push dword 0
    42 00000035 FF15[00000000]              call [exit]
