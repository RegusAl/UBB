     1                                  ; Se dau un nume de fisier si un text (definite in segmentul de date). Textul contine litere mici, cifre si spatii. Sa se inlocuiasca toate cifrele de pe pozitii impare cu caracterul ‘X’. Sa se creeze un fisier 
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit, fopen, fprintf, fclose
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 6669736965722E7478-         nume_fisier db "fisier.txt", 0
    12 00000009 7400               
    13 0000000B 7700                        mod_acces db "w", 0
    14 0000000D FFFFFFFF                    descriptor_fisier dd -1
    15 00000011 416E61206172652031-         text db "Ana are 123456789 mere si 123456789 pere", 0
    15 0000001A 323334353637383920-
    15 00000023 6D6572652073692031-
    15 0000002C 323334353637383920-
    15 00000035 7065726500         
    16                                      len equ $-text
    17 0000003A 256400                      format_dec db "%d", 0
    18 0000003D 256300                      format_char db "%c", 0
    19                                  
    20                                  segment code use32 class=code
    21                                      start:
    22                                          
    23                                          ; deschidere fisier
    24 00000000 68[0B000000]                    push dword mod_acces
    25 00000005 68[00000000]                    push dword nume_fisier
    26 0000000A FF15[00000000]                  call [fopen]
    27 00000010 83C408                          add esp, 2*4
    28                                          
    29                                          ; verificare fisier
    30 00000013 A3[0D000000]                    mov [descriptor_fisier], eax
    31 00000018 83F800                          cmp eax, 0
    32 0000001B 747E                            je final
    33                                      
    34                                          ; schimbare text
    35 0000001D B914000000                      mov ecx, len/2
    36 00000022 E377                            jecxz final
    37 00000024 BE00000000                      mov esi, 0
    38 00000029 FC                              cld
    39                                          repeta:
    40 0000002A 51                                  push ecx
    41 0000002B FFB6[11000000]                      push dword [text+esi]
    42 00000031 68[3D000000]                        push dword format_char
    43 00000036 FF35[0D000000]                      push dword [descriptor_fisier]
    44 0000003C FF15[00000000]                      call [fprintf]
    45 00000042 83C40C                              add esp, 3*4
    46                                              
    47 00000045 46                                  inc(esi)
    48                                                  
    49 00000046 80BE[11000000]30                    cmp byte [text+esi], '0'
    50 0000004D 7C21                                jl peste
    51 0000004F 80BE[11000000]39                    cmp byte [text+esi], '9'
    52 00000056 7F18                                jg peste
    53                                              
    54 00000058 6A58                                push dword 'X'
    55 0000005A 68[3D000000]                        push dword format_char
    56 0000005F FF35[0D000000]                      push dword [descriptor_fisier]
    57 00000065 FF15[00000000]                      call [fprintf]
    58 0000006B 83C40C                              add esp, 3*4
    59 0000006E EB1A                                jmp gata
    60                                              
    61                                              peste:
    62 00000070 FFB6[11000000]                      push dword [text+esi]
    63 00000076 68[3D000000]                        push dword format_char
    64 0000007B FF35[0D000000]                      push dword [descriptor_fisier]
    65 00000081 FF15[00000000]                      call [fprintf]
    66 00000087 83C40C                              add esp, 3*4
    67                                              
    68                                              gata:
    69 0000008A 46                                  inc(esi)
    70                                          
    71 0000008B 59                                  pop ecx
    72 0000008C E29C                            loop repeta
    73                                          
    74 0000008E BB01000000                      mov ebx, 1
    75 00000093 F7C329000000                    test ebx, len
    76 00000099 7400                            jz final
    77                                      
    78                                      final:
    79                                          ; inchidem fisierul
    80 0000009B FF35[0D000000]                  push dword [descriptor_fisier]
    81 000000A1 FF15[00000000]                  call [fclose]
    82 000000A7 83C404                          add esp, 1*4
    83                                      
    84 000000AA 6A00                        push dword 0
    85 000000AC FF15[00000000]              call [exit]
