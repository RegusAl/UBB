     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  ; a - byte, b - word, c - double word, d - qword
     9                                  segment data use32 class=data
    10 00000000 66                          a db 66h
    11 00000001 3412                        b dw 1234h
    12 00000003 78563412                    c dd 12345678h
    13 00000007 1111111111111111            d dq 1111111111111111h
    14                                      
    15                                  ; (d-c)+(b-a)-(b+b+b) 
    16                                  segment code use32 class=code
    17                                      start:
    18                                          
    19                                          ; d - c
    20 00000000 A1[07000000]                    mov eax, [d]
    21 00000005 8B15[0B000000]                  mov edx, [d+4]              ; EDX:EAX = d
    22 0000000B 2B05[03000000]                  sub eax, dword [c]
    23 00000011 83DA00                          sbb edx, dword 0         ; EDX:EAX = d - c
    24                                          
    25                                          ; b - a
    26 00000014 668B1D[01000000]                mov bx, [b]                     ; BX = b
    27 0000001B 8A0D[00000000]                  mov cl, [a]                      ; CL = a
    28 00000021 B500                            mov ch, 0                       ; CX = a
    29 00000023 6629CB                          sub bx, cx                      ; BX = BX - CX = b - a
    30                                          
    31                                          ; b + b + b
    32 00000026 668B0D[01000000]                mov cx, [b]
    33 0000002D 66030D[01000000]                add cx, [b]
    34 00000034 66030D[01000000]                add cx, [b]                      ; CX = b + b + b
    35                                          
    36                                          ; (b-a) - (b + b + b)
    37 0000003B 6629CB                          sub bx, cx                      ; BX = BX - CX
    38                                          
    39                                      
    40 0000003E 6689D9                          mov cx, bx                     ; CX = BX
    41                                          
    42 00000041 89D3                            mov ebx, edx                ; EBX = EDX
    43 00000043 66BA0000                        mov dx, 0                       ; DX = 0
    44                                          
    45 00000047 6652                            push dx         
    46 00000049 6651                            push cx
    47 0000004B 59                              pop ecx                          ; ECX = DX:CX
    48                                          
    49 0000004C 29C8                            sub eax, ecx                 ; EAX = EAX - ECX
    50 0000004E 89DA                            mov edx, ebx                ; EDX = EBX
    51 00000050 83DA00                          sbb edx, 0                 
    52                                          
    53                                          ; EDX:EAX
    54                                          
    55 00000053 6A00                            push dword 0
    56 00000055 FF15[00000000]                  call [exit]
