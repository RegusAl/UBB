     1                                  ; Se dau doua siruri de caractere S1 si S2. Sa se construiasca sirul D prin concatenarea elementelor de pe pozitiile impare din S2 cu elementele de pe pozitiile pare din S1.
     2                                  ;   Exemplu:
     3                                  ;   S1: 'a', 'b', 'c', 'b', 'e', 'f'
     4                                  ;   S2: '1', '2', '3', '4', '5'
     5                                  ;   D: '1', '3', '5', 'b', 'b', 'f'
     6                                  bits 32
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 616263626566                s1 db 'a', 'b', 'c', 'b', 'e', 'f'
    14                                      len_s1 equ $-s1
    15 00000006 3132333435                  s2 db '1', '2', '3', '4', '5'
    16                                      len_s2 equ $-s2
    17 0000000B 00<rept>                    d times len_s1+len_s2 db 0
    18                                      
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 BF00000000                      mov edi, 0
    22                                          
    23                                          ; elementele de pe pozitiile impare din s2
    24 00000005 B905000000                      mov ecx, len_s2
    25 0000000A E341                            jecxz final
    26 0000000C BE00000000                      mov esi, 0
    27                                          repeta_s2:
    28 00000011 F7C601000000                        test esi, 1h
    29 00000017 750D                                jne peste_s2
    30 00000019 8A86[06000000]                      mov al, [s2+esi]
    31 0000001F 8887[0B000000]                      mov [d+edi], al
    32 00000025 47                                  inc(edi)
    33                                              peste_s2:
    34 00000026 46                                  inc(esi)
    35 00000027 E2E8                            loop repeta_s2
    36                                          
    37                                          ; elementele de pe pozitiile pare din s1
    38 00000029 B906000000                      mov ecx, len_s1
    39 0000002E E31D                            jecxz final
    40 00000030 BE00000000                      mov esi, 0
    41                                          repeta_s1:
    42 00000035 F7C601000000                        test esi, 1h
    43 0000003B 740D                                je peste_s1
    44 0000003D 8A86[00000000]                      mov al, [s1+esi]
    45 00000043 8887[0B000000]                      mov [d+edi], al
    46 00000049 47                                  inc(edi)
    47                                              peste_s1:
    48 0000004A 46                                  inc(esi)
    49 0000004B E2E8                            loop repeta_s1
    50                                          
    51                                      final:    
    52 0000004D 6A00                        push dword 0
    53 0000004F FF15[00000000]              call [exit]
