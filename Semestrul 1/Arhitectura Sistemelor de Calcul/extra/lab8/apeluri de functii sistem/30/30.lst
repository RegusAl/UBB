     1                                  ; Se citesc de la tastatura numere (in baza 10) pana cand se introduce cifra 0. Determinaţi şi afişaţi cel mai mic număr dintre cele citite. 
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit, printf, scanf
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 00000000                    x dd 0
    12 00000004 44617469206E756D65-         mesaj_x db "Dati numerrele:  ", 0
    12 0000000D 7272656C653A202000 
    13 00000016 256400                      format_dec db "%d", 0
    14 00000019 00                          ok db 0
    15 0000001A 00000000                    minim dd 0
    16 0000001E 43656C206D6169206D-         afisare db "Cel mai mic numar este: %d", 0
    16 00000027 6963206E756D617220-
    16 00000030 657374653A20256400 
    17                                  
    18                                  segment code use32 class=code
    19                                      start:
    20                                      
    21                                          ; x = 
    22 00000000 68[04000000]                    push dword mesaj_x
    23 00000005 FF15[00000000]                  call [printf]
    24 0000000B 83C404                          add esp, 1*4
    25                                          
    26                                          ; citim x pana cand x = 0
    27                                          citire:
    28                                          
    29 0000000E 68[00000000]                        push dword x
    30 00000013 68[16000000]                        push dword format_dec
    31 00000018 FF15[00000000]                      call [scanf]
    32 0000001E 83C408                              add esp, 2*4
    33                                              
    34 00000021 A1[00000000]                        mov eax, [x]
    35                                              
    36                                              ; ne oprim din citire cand x = 0
    37 00000026 803D[00000000]00                    cmp byte [x], 0
    38 0000002D 7424                                je peste
    39                                              
    40                                              ; comparam sa vedem daca este prima citire
    41 0000002F 803D[19000000]01                    cmp byte [ok], 1
    42 00000036 740C                                je ok_1
    43                                              
    44 00000038 C605[19000000]01                    mov byte [ok], 1
    45 0000003F A3[1A000000]                        mov [minim], eax
    46                                              
    47                                              ok_1:
    48                                              
    49                                              ; comparam daca este mai mic decat minimul
    50 00000044 3B05[1A000000]                      cmp eax, dword [minim]
    51 0000004A 7205                                jb mai_mare
    52 0000004C A3[1A000000]                        mov [minim], eax
    53                                              
    54                                              mai_mare:
    55                                          
    56 00000051 EBBB                            jmp citire
    57                                      
    58                                      peste:
    59                                      
    60                                          ; afisare
    61 00000053 FF35[1A000000]                  push dword [minim]
    62 00000059 68[1E000000]                    push dword afisare
    63 0000005E FF15[00000000]                  call [printf]
    64 00000064 83C408                          add esp, 2*4
    65                                          
    66 00000067 6A00                        push dword 0
    67 00000069 FF15[00000000]              call [exit]
