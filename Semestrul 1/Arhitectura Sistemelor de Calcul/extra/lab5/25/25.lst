     1                                   ; Se dau doua siruri de caractere S1 si S2. Sa se construiasca sirul D ce contine toate elementele din S1 care nu apar in S2.
     2                                  ;    Exemplu:
     3                                  ;   S1: '+', '4', '2', 'a', '8', '4', 'X', '5'
     4                                  ;   S2: 'a', '4', '5'
     5                                  ;   D: '+', '2', '8', 'X'
     6                                  bits 32 
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 2B34326138345835            s1 db '+', '4', '2', 'a', '8', '4', 'X', '5'
    14                                      len_s1 equ $-s1
    15 00000008 613435                      s2 db 'a', '4', '5'
    16                                      len_s2 equ $-s2
    17 0000000B 00<rept>                    d times len_s1 db 0
    18                                  
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B908000000                      mov ecx, len_s1
    22 00000005 E32E                            jecxz final
    23 00000007 BE00000000                      mov esi, 0
    24                                          repeta:
    25 0000000C 51                                  push ecx
    26 0000000D 8A86[00000000]                      mov al, [s1+esi]
    27 00000013 BA00000000                          mov edx, 0
    28 00000018 B903000000                          mov ecx, len_s2
    29                                              exista:
    30 0000001D 8A9A[08000000]                          mov bl, [s2+edx]
    31 00000023 42                                      inc(edx)
    32 00000024 38D8                                    cmp al, bl
    33 00000026 7409                                    je egale
    34 00000028 E2F3                                loop exista
    35                                              
    36 0000002A 8887[0B000000]                      mov [d+edi], al
    37 00000030 47                                  inc(edi)
    38                                              
    39                                              egale:
    40 00000031 59                                  pop ecx
    41 00000032 46                                  inc(esi)
    42 00000033 E2D7                            loop repeta
    43                                          
    44                                      final:
    45 00000035 6A00                        push dword 0
    46 00000037 FF15[00000000]              call [exit]
