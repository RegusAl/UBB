     1                                  ; Se dau 2 siruri de octeti A si B. Sa se construiasca sirul R care sa contina elementele lui B in ordine inversa urmate de elementele negative ale lui A.
     2                                  ;   Exemplu:
     3                                  ;   A: 2, 1, -3, 3, -4, 2, 6
     4                                  ;   B: 4, 5, 7, 6, 2, 1
     5                                  ;   R: 1, 2, 6, 7, 5, 4, -3, -4
     6                                  bits 32
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 0201FD03FC0206              a db 2, 1, -3, 3, -4, 2, 6
    14                                      len_a equ $-a
    15 00000007 040507060201                b db 4, 5, 7, 6, 2, 1
    16                                      len_b equ $-b
    17 0000000D 00<rept>                    r times len_a+len_b db 0
    18                                      
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 BF00000000                      mov edi, 0
    22                                          ; sirul b
    23 00000005 B906000000                      mov ecx, len_b
    24 0000000A E30F                            jecxz peste_b
    25                                          repeta_b:
    26 0000000C 8A81[06000000]                      mov al, [b+ecx-1]
    27 00000012 8887[0D000000]                      mov [r+edi], al
    28 00000018 47                                  inc(edi)
    29 00000019 E2F1                            loop repeta_b
    30                                                  
    31                                          peste_b:
    32                                          ; sirul a
    33 0000001B B907000000                      mov ecx, len_a
    34 00000020 E319                            jecxz final
    35 00000022 BE00000000                      mov esi, 0
    36                                          repeta_a:
    37 00000027 8A86[00000000]                      mov al, [a+esi]
    38 0000002D 3C00                                cmp al, 0
    39 0000002F 7D07                                jge pozitive
    40 00000031 8887[0D000000]                      mov [r+edi], al
    41 00000037 47                                  inc(edi)
    42                                              pozitive:
    43 00000038 46                                  inc(esi)
    44 00000039 E2EC                            loop repeta_a
    45                                          
    46                                          final:    
    47 0000003B 6A00                        push dword 0
    48 0000003D FF15[00000000]              call [exit]
    49                                  
