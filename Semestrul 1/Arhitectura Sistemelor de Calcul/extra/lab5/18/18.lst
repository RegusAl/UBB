     1                                  ; Se dau 2 siruri de octeti A si B. Sa se construiasca sirul R care sa contina doar elementele impare si pozitive din cele 2 siruri.
     2                                  ;   Exemplu:
     3                                  ;   A: 2, 1, 3, -3
     4                                  ;   B: 4, 5, -5, 7
     5                                  ;   R: 1, 3, 5, 7
     6                                  bits 32
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 020103FD                    a db 2, 1, 3, -3
    14                                      len_a equ $-a
    15 00000004 0405FB07                    b db 4, 5, -5, 7
    16                                      len_b equ $-b
    17 00000008 00<rept>                    r times len_a+len_b db 0 
    18                                  
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 BF00000000                      mov edi, 0
    22                                          ; sirul a
    23 00000005 B904000000                      mov ecx, len_a
    24 0000000A E341                            jecxz final
    25 0000000C BE00000000                      mov esi, 0
    26                                          repeta_a:
    27 00000011 8A86[00000000]                      mov al, [a+esi]
    28 00000017 3C00                                cmp al, 0
    29 00000019 7C0B                                jl negativ_a
    30 0000001B A801                                test al, 1h
    31 0000001D 7407                                je par_a
    32 0000001F 8887[08000000]                      mov [r+edi], al
    33 00000025 47                                  inc(edi)
    34                                              negativ_a:
    35                                              par_a:
    36 00000026 46                                  inc(esi)
    37 00000027 E2E8                            loop repeta_a
    38                                          
    39                                          ; sirul b
    40 00000029 B904000000                      mov ecx, len_b
    41 0000002E E31D                            jecxz final
    42 00000030 BE00000000                      mov esi, 0
    43                                          repeta_b:
    44 00000035 8A86[04000000]                      mov al, [b+esi]
    45 0000003B 3C00                                cmp al, 0
    46 0000003D 7C0B                                jl negativ_b
    47 0000003F A801                                test al, 1h
    48 00000041 7407                                je par_b
    49 00000043 8887[08000000]                      mov [r+edi], al
    50 00000049 47                                  inc(edi)
    51                                              negativ_b:
    52                                              par_b:
    53 0000004A 46                                  inc(esi)
    54 0000004B E2E8                            loop repeta_b
    55                                          
    56                                      final:
    57 0000004D 6A00                        push dword 0
    58 0000004F FF15[00000000]              call [exit]
