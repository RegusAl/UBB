     1                                  ;  Se da un fisier text. Fisierul contine numere (Ã®n baza 10) separate prin spatii. Sa se citeasca continutul acestui fisier, sa se determine maximul numerelor citite si sa se scrie rezultatul la sfarsitul fisierul
     2                                  bits 32 
     3                                  global start        
     4                                  
     5                                  extern exit, fopen, fread, fclose, fprintf, printf
     6                                      import exit msvcrt.dll  
     7                                      import fopen msvcrt.dll  
     8                                      import fread msvcrt.dll
     9                                      import fclose msvcrt.dll
    10                                      import fprintf msvcrt.dll
    11                                      import printf msvcrt.dll
    12                                  
    13                                  
    14                                  segment data use32 class=data
    15 00000000 6669736965722E7478-         nume_fisier db "fisier.txt", 0  ; numele fisierului care va fi deschis
    15 00000009 7400               
    16 0000000B 612B00                      mod_acces db "a+", 0          ; modul de deschidere a fisierului - 
    17 0000000E 202043656C206D6169-         format db '  Cel mai mare numar este: %s', 0
    17 00000017 206D617265206E756D-
    17 00000020 617220657374653A20-
    17 00000029 257300             
    18 0000002C 00<rept>                    numar times 4 db 0
    19 00000030 00<rept>                    inumar times 4 db 0
    20 00000034 FFFFFFFF                    descriptor_fis dd -1
    21                                      len equ 20
    22 00000038 00000000<rept>              sir times len dd 0
    23                                      
    24                                  
    25                                  segment code use32 class=code        
    26                                      start:
    27 00000000 68[0B000000]                    push dword mod_acces     
    28 00000005 68[00000000]                    push dword nume_fisier
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp, 4*2
    31                                          
    32 00000013 A3[34000000]                    mov [descriptor_fis], eax
    33                                          
    34 00000018 83F800                          cmp eax, 0
    35 0000001B 746C                            je final
    36                                          
    37 0000001D FF35[34000000]                  push dword [descriptor_fis]
    38 00000023 6A14                            push dword len
    39 00000025 6A04                            push dword 4
    40 00000027 68[38000000]                    push dword sir        
    41 0000002C FF15[00000000]                  call [fread]
    42 00000032 83C410                          add esp, 4*4
    43                                          
    44 00000035 89C1                            mov ecx, eax
    45 00000037 41                              inc ecx
    46                                          
    47 00000038 BE[38000000]                    mov esi, sir
    48 0000003D BF00000000                      mov edi, 0
    49 00000042 31DB                            xor ebx, ebx
    50 00000044 BAC0BDF0FF                      mov edx, -1000000
    51                                          lp:
    52 00000049 FC                                  cld
    53 0000004A AC                                  lodsb
    54 0000004B 3C20                                cmp al, ' '
    55 0000004D 7407                                je verifica
    56 0000004F C1E308                              shl ebx, 8
    57 00000052 88C3                                mov bl, al
    58 00000054 EB0D                                jmp sf
    59                                              verifica:
    60 00000056 47                                  inc edi
    61 00000057 39D3                                    cmp ebx, edx
    62 00000059 7F04                                    jg schimba
    63 0000005B 31DB                                    xor ebx, ebx
    64 0000005D EB04                                    jmp sf
    65                                              schimba:
    66 0000005F 89DA                                    mov edx, ebx
    67 00000061 31DB                                    xor ebx, ebx
    68                                          sf:
    69 00000063 39CF                            cmp edi, ecx
    70 00000065 75E2                            jne lp
    71 00000067 8915[2C000000]                  mov [numar], edx
    72 0000006D B904000000                      mov ecx, 4
    73 00000072 BE[2C000000]                    mov esi, numar
    74 00000077 83C603                          add esi, 3
    75 0000007A BF[30000000]                    mov edi, inumar
    76                                          invers:
    77 0000007F FD                                  std
    78 00000080 AC                                  lodsb
    79 00000081 FC                                  cld
    80 00000082 3C00                                cmp al, 0
    81 00000084 7401                                je e0
    82 00000086 AA                                  stosb
    83                                              e0:
    84 00000087 E2F6                            loop invers
    85                                          
    86                                          
    87                                          final:
    88                                          
    89 00000089 68[30000000]                    push dword inumar
    90 0000008E 68[0E000000]                    push dword format
    91 00000093 FF35[34000000]                  push dword [descriptor_fis]
    92 00000099 FF15[00000000]                  call [fprintf]
    93 0000009F 83C40C                          add esp, 4*3
    94                                          
    95                                          
    96 000000A2 FF35[34000000]                  push dword [descriptor_fis]
    97 000000A8 FF15[00000000]                  call [fclose]
    98 000000AE 83C404                          add esp, 4
    99                                          
   100 000000B1 6A00                            push    dword 0
   101 000000B3 FF15[00000000]                  call    [exit]
