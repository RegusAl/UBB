     1                                  ; Se citesc de la tastatura numere (in baza 10) pana cand se introduce cifra 0. Determinaţi şi afişaţi cel mai mare număr dintre cele citite.
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit, printf, scanf
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 <res 00000004>              max resd 1
    12 00000004 00000000                    x dd 0
    13 00000008 256400                      format_dec db "%d", 0
    14 0000000B 4E756D6172756C206D-         afisare db "Numarul maxim este: %d", 0
    14 00000014 6178696D2065737465-
    14 0000001D 3A20256400         
    15                                      
    16                                  
    17                                  segment code use32 class=code
    18                                      start:
    19                                          
    20                                          ; citire numere
    21                                          repeta:
    22 00000000 68[04000000]                        push dword x
    23 00000005 68[08000000]                        push dword format_dec
    24 0000000A FF15[00000000]                      call [scanf]
    25 00000010 83C408                              add esp, 2*4
    26 00000013 A1[04000000]                        mov eax, [x]
    27 00000018 83F800                              cmp eax, 0
    28 0000001B 740F                                je peste
    29 0000001D 3B05[00000000]                      cmp eax, [max]
    30 00000023 7C05                                jl mai_mic
    31 00000025 A3[00000000]                        mov [max], eax
    32                                              mai_mic:
    33 0000002A EBD4                            jmp repeta
    34                                      
    35                                          peste:
    36                                          
    37 0000002C FF35[00000000]                  push dword [max]
    38 00000032 68[0B000000]                    push dword afisare
    39 00000037 FF15[00000000]                  call [printf]
    40 0000003D 83C408                          add esp, 2*4
    41                                      
    42 00000040 6A00                        push dword 0
    43 00000042 FF15[00000000]              call [exit]
