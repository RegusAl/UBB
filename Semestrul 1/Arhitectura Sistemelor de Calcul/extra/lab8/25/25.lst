     1                                  ; Sa se citeasca de la tastatura doua numere a si b (in baza 10) şi să se determine relaţia de ordine dintre ele (a < b, a = b sau a > b). Afisati rezultatul în următorul format: "<a> < <b>, <a> = <b> sau <a> >
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit, printf, scanf
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 00000000                    a dd 0
    12 00000004 00000000                    b dd 0
    13 00000008 61203D2000                  mesaj_a db "a = ", 0
    14 0000000D 62203D2000                  mesaj_b db "b = ", 0
    15 00000012 256400                      format_dec db "%d", 0
    16 00000015 2564203E20256400            afisare_mare db "%d > %d", 0
    17 0000001D 2564203D20256400            afisare_egal db "%d = %d", 0
    18 00000025 2564203C20256400            afisare_mic db "%d < %d", 0
    19                                      
    20                                  segment code use32 class=code
    21                                      start:
    22                                          
    23                                          ; a = 
    24 00000000 68[08000000]                    push dword mesaj_a
    25 00000005 FF15[00000000]                  call [printf]
    26 0000000B 83C404                          add esp, 1*4
    27                                          
    28                                          ; citim a
    29 0000000E 68[00000000]                    push dword a
    30 00000013 68[12000000]                    push dword format_dec
    31 00000018 FF15[00000000]                  call [scanf]
    32 0000001E 83C408                          add esp, 2*4
    33                                          
    34                                          ; b = 
    35 00000021 68[0D000000]                    push dword mesaj_b
    36 00000026 FF15[00000000]                  call [printf]
    37 0000002C 83C404                          add esp, 1*4
    38                                          
    39                                          ; citim b
    40 0000002F 68[04000000]                    push dword b
    41 00000034 68[12000000]                    push dword format_dec
    42 00000039 FF15[00000000]                  call [scanf]
    43 0000003F 83C408                          add esp, 2*4
    44                                          
    45 00000042 A1[00000000]                    mov eax, [a]
    46 00000047 8B1D[04000000]                  mov ebx, [b]
    47                                          
    48 0000004D 39D8                            cmp eax, ebx
    49 0000004F 7F04                            jg mai_mare
    50 00000051 7414                            je egal
    51 00000053 7C24                            jl mai_mic
    52                                          
    53                                          mai_mare:
    54 00000055 53                                  push ebx
    55 00000056 50                                  push eax
    56 00000057 68[15000000]                        push dword afisare_mare
    57 0000005C FF15[00000000]                      call [printf]
    58 00000062 83C40C                              add esp, 3*4
    59 00000065 EB22                                jmp peste
    60                                          
    61                                          egal:
    62 00000067 53                                  push ebx
    63 00000068 50                                  push eax
    64 00000069 68[1D000000]                        push dword afisare_egal
    65 0000006E FF15[00000000]                      call [printf]
    66 00000074 83C40C                              add esp, 3*4
    67 00000077 EB10                                jmp peste
    68                                          
    69                                          mai_mic:
    70 00000079 53                                  push ebx
    71 0000007A 50                                  push eax
    72 0000007B 68[25000000]                        push dword afisare_mic
    73 00000080 FF15[00000000]                      call [printf]
    74 00000086 83C40C                              add esp, 3*4
    75                                              
    76                                          peste:
    77                                          
    78 00000089 6A00                        push dword 0
    79 0000008B FF15[00000000]              call [exit]
