     1                                  ; Se da un fisier text. Sa se citeasca continutul fisierului, sa se contorizeze numarul de cifre impare si sa se afiseze aceasta valoare. Numele fisierului text este definit in segmentul de date. 
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit, fopen, fread, fclose, printf
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fread msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 63696672655F696D70-         nume_fisier db "cifre_impare.txt", 0
    13 00000009 6172652E74787400   
    14 00000011 7200                        mod_acces db "r", 0
    15 00000013 FFFFFFFF                    descriptor_fisier dd -1
    16                                      len equ 100
    17 00000017 00<rept>                    text times len db 0
    18 0000007B 313335373900                cifre_impare db "13579", 0
    19 00000081 54657874756C206172-         afisare_format db "Textul are %d cifre impare", 0
    19 0000008A 652025642063696672-
    19 00000093 6520696D7061726500 
    20                                      
    21                                      
    22                                  segment code use32 class=code
    23                                      start:
    24                                      
    25                                          ; deschidere fisier
    26 00000000 68[11000000]                    push dword mod_acces
    27 00000005 68[00000000]                    push dword nume_fisier
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp, 2*4
    30                                          
    31                                          ; verificare descriptor_fisier
    32 00000013 A3[13000000]                    mov [descriptor_fisier], eax
    33 00000018 83F800                          cmp eax, 0
    34 0000001B 746B                            je final
    35                                      
    36                                          ; citire text din fisier
    37 0000001D FF35[13000000]                  push dword [descriptor_fisier]
    38 00000023 6A64                            push dword len
    39 00000025 6A01                            push dword 1
    40 00000027 68[17000000]                    push dword text
    41 0000002C FF15[00000000]                  call [fread]
    42 00000032 83C410                          add esp, 4*4
    43                                          
    44                                          ; inchidere fisier
    45 00000035 FF35[13000000]                  push dword [descriptor_fisier]
    46 0000003B FF15[00000000]                  call [fclose]
    47 00000041 83C404                          add esp, 1*4
    48                                          
    49 00000044 BE00000000                      mov esi, 0
    50 00000049 FC                              cld
    51 0000004A BB00000000                      mov ebx, 0
    52                                          
    53                                          repeta:
    54                                          
    55 0000004F BF00000000                          mov edi, 0
    56 00000054 B905000000                          mov ecx, 5
    57                                                  
    58                                              cifre_impare_loop:
    59 00000059 8A96[17000000]                          mov dl, [text+esi]
    60 0000005F 3A97[7B000000]                          cmp dl, [cifre_impare+edi]
    61 00000065 7405                                    je numara
    62 00000067 47                                      inc(edi)
    63 00000068 E2EF                                loop cifre_impare_loop
    64                                              
    65 0000006A EB03                                jmp peste
    66                                              
    67                                              numara:
    68 0000006C 83C301                                  add ebx, 1
    69                                              
    70                                              peste:
    71 0000006F 46                                      inc(esi)
    72                                          
    73 00000070 80BE[17000000]00                cmp byte [text+esi], 0
    74 00000077 75D6                            jne repeta
    75                                          
    76 00000079 53                              push ebx
    77 0000007A 68[81000000]                    push dword afisare_format
    78 0000007F FF15[00000000]                  call [printf]
    79 00000085 83C408                          add esp, 2*4
    80                                          
    81                                      
    82                                      final:
    83                                      
    84 00000088 6A00                        push dword 0
    85 0000008A FF15[00000000]              call [exit]
