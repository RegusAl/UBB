     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import scanf msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 00000000                    n dd 0
    11 00000004 00000000<rept>              numere times 100 dd 0
    12 00000194 4461746920756E2073-         mesaj db "Dati un sir de numere: ", 0
    12 0000019D 6972206465206E756D-
    12 000001A6 6572653A2000       
    13 000001AC 256400                      format db "%d", 0
    14 000001AF 25642000                    format_tiparire db "%d ", 0
    15                                      
    16                                  ; Cititi de la tastatura si afisati un sir de numere intregi.
    17                                  ; (citirea se termina atunci cand utilizatorul introduce numarul ZERO)
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 FC                              cld
    21 00000001 BF[04000000]                    mov edi, numere
    22                                          citire:
    23 00000006 68[94010000]                        push dword mesaj
    24 0000000B FF15[00000000]                      call [printf]
    25 00000011 83C404                              add esp, 1*4
    26 00000014 68[00000000]                        push dword n
    27 00000019 68[AC010000]                        push dword format
    28 0000001E FF15[00000000]                      call [scanf]
    29 00000024 83C408                              add esp, 2*4
    30 00000027 A1[00000000]                        mov eax, [n]
    31 0000002C 83F800                              cmp eax, 0
    32 0000002F 7403                                je peste
    33 00000031 AB                                  stosd
    34 00000032 EBD2                            jmp citire
    35                                          
    36                                          peste:
    37                                          
    38 00000034 B964000000                      mov ecx, 100
    39 00000039 FC                              cld
    40 0000003A BE[04000000]                    mov esi, numere
    41                                          afisare:
    42 0000003F 51                                  push ecx
    43 00000040 AD                                  lodsd
    44 00000041 83F800                              cmp eax, 0
    45 00000044 7412                                je final
    46 00000046 50                                  push eax
    47 00000047 68[AF010000]                        push dword format_tiparire
    48 0000004C FF15[00000000]                      call [printf]
    49 00000052 83C408                              add esp, 4*2
    50 00000055 59                                  pop ecx
    51 00000056 E2E7                            loop afisare
    52                                          final:
    53                                          ; exit(0)
    54 00000058 6A00                            push dword 0        ; push the parameter for exit onto the stack
    55 0000005A FF15[00000000]                  call [exit]         ; call exit to terminate the program
