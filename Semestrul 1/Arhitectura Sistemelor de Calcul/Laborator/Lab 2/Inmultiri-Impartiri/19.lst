     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  ; a,b,c,d-byte, e,f,g,h-word
     9                                  segment data use32 class=data
    10 00000000 0A                          a db 10
    11 00000001 14                          b db 20
    12 00000002 1E                          c db 30
    13 00000003 37                          d db 55
    14 00000004 3412                        e dw 1234h
    15 00000006 5555                        f dw 5555h
    16 00000008 8967                        g dw 6789h
    17 0000000A 0010                        h dw 1000h
    18                                  
    19                                  
    20                                  ; (e + g) * 2 / (a * c) + (h â€“ f) + b * 3 
    21                                  segment code use32 class=code
    22                                      start:
    23                                          
    24                                          ; e + g
    25 00000000 66A1[04000000]                  mov ax, [e]
    26 00000006 660305[08000000]                add ax, [g]
    27                                          
    28                                          ; ( ) * 2
    29 0000000D 66BB0200                        mov bx, 2
    30 00000011 66F7E3                          mul bx                ; EAX = AX * BX
    31                                          
    32 00000014 6652                            push dx
    33 00000016 6650                            push ax
    34                                          
    35                                          ; (a * c)
    36 00000018 A0[00000000]                    mov al, [a]
    37 0000001D 8A0D[02000000]                  mov cl, [c]
    38 00000023 F6E1                            mul cl                  ; AX = AL * CL
    39                                          
    40                                          ; /
    41 00000025 6689C3                          mov bx, ax
    42 00000028 6658                            pop ax
    43 0000002A 665A                            pop dx
    44 0000002C 66F7F3                          div bx                   ; AX = DX:AX / BX      DX = DX:AX % BX
    45                                  
    46                                          ; (h - f)
    47 0000002F 668B15[0A000000]                mov dx, [h]
    48 00000036 662B15[06000000]                sub dx, [f]
    49                                          
    50 0000003D 6601D0                          add ax, dx
    51 00000040 6689C1                          mov cx, ax
    52 00000043 A0[01000000]                    mov al, [b]
    53 00000048 F6E3                            mul bl                    ; AX = AL * BL
    54 0000004A 6601C1                          add cx, ax
    55                                          
    56                                          ; rezultatul este in CX
    57                                          
    58                                  
    59 0000004D 6A00                         push dword 0
    60 0000004F FF15[00000000]               call [exit]
