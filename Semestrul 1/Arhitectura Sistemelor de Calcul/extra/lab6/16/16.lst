     1                                  ; Se dau doua siruri de caractere ordonate alfabetic s1 si s2. Sa se construiasca prin interclasare sirul ordonat s3 care sa contina toate elementele din s1 si s2. 
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9 00000000 6164656C                    s1 db 'a', 'd', 'e', 'l'
    10                                      len1 equ $-s1
    11 00000004 6266676B                    s2 db 'b', 'f', 'g', 'k'
    12                                      len2 equ $-s2
    13 00000008 00<rept>                    s3 times len1+len2 db 0
    14                                  
    15                                  segment code use32 class=code
    16                                      start:
    17 00000000 B908000000                      mov ecx, len1+len2
    18 00000005 E33C                            jecxz final
    19                                  
    20 00000007 BE[00000000]                    mov esi, s1
    21 0000000C BB[04000000]                    mov ebx, s2
    22 00000011 BF[08000000]                    mov edi, s3
    23 00000016 FC                              cld
    24                                          
    25                                          repeta:
    26                                              
    27 00000017 51                                  push ecx
    28 00000018 81FE[04000000]                      cmp esi, s1+len1
    29 0000001E 741E                                je gata_s1
    30 00000020 81FB[08000000]                      cmp ebx, s2+len2
    31 00000026 7418                                je gata_s2
    32                                              
    33 00000028 8A06                                mov al, [esi]
    34 0000002A 8A23                                mov ah, [ebx]
    35 0000002C 38E0                                cmp al, ah
    36                                              
    37 0000002E 7208                                jb din_s1
    38                                                 
    39 00000030 56                                     push esi
    40 00000031 89DE                                   mov esi, ebx
    41 00000033 A4                                     movsb
    42 00000034 43                                     inc(ebx)
    43 00000035 5E                                     pop esi
    44 00000036 EB01                                   jmp din_s2
    45                                              din_s1:
    46 00000038 A4                                      movsb
    47                                              din_s2:
    48                                              
    49 00000039 59                                  pop ecx
    50                                              
    51                                              
    52 0000003A E2DB                            loop repeta
    53 0000003C EB05                            jmp final
    54                                          
    55                                           gata_s1:
    56 0000003E 89DE                                mov esi, ebx                ; daca s1 este cel care s-a terminat primul, trebuie incarcat in esi valoarea din ebx
    57                                              
    58                                          gata_s2:
    59                                              completare:                 ; ecx are valoarea ramasa din loopul anterior, deci movsb va efectua de nr potrivit de ori
    60 00000040 A4                                      movsb
    61 00000041 E2FD                                loop completare
    62                                          
    63                                      final:
    64 00000043 6A00                        push dword 0
    65 00000045 FF15[00000000]              call [exit]
