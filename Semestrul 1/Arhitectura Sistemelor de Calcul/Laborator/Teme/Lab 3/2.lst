     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  ; a - byte, b - word, c - double word, d - qword - Interpretare cu semn
     9                                  segment data use32 class=data
    10 00000000 10                          a db 10h
    11 00000001 3412                        b dw 1234h
    12 00000003 A2896714                    c dd 146789A2h
    13 00000007 4131211101917856            d dq 5678910111213141h
    14                                  
    15                                  ; d-(a+b+c)-(a+a) 
    16                                  segment code use32 class=code
    17                                      start:
    18                                          
    19                                          ; a + b + c
    20 00000000 A0[00000000]                    mov al, [a]     ; AL = a
    21 00000005 6698                            cbw                ; AL --> AX
    22 00000007 660305[01000000]                add ax, [b]     ; AX = AX + b
    23 0000000E 98                              cwde              ; AX --> EAX
    24 0000000F 0305[03000000]                  add eax, [c]  ; EAX = EAX + c
    25                                          
    26                                          ; a + a
    27 00000015 8A1D[00000000]                  mov bl, [a]
    28 0000001B 021D[00000000]                  add bl, [a]     ; BL = a + a
    29                                          
    30                                          ; (a + b + c) - (a+a)
    31 00000021 89C1                            mov ecx, eax    ; ECX = EAX
    32 00000023 88D8                            mov al, bl           ; AL = BL
    33 00000025 6698                            cbw                     ; AL --> AX
    34 00000027 98                              cwde                   ; AX --> EAX
    35                                          
    36 00000028 29C1                            sub ecx, eax    ; ECX = ECX - EAX = (a + b + c) - (a + a)
    37                                          
    38                                          ; d- ECX
    39 0000002A A1[07000000]                    mov eax, [d]        ; EAX = d (11213141)
    40 0000002F 8B15[0B000000]                  mov edx, [d+4]    ; EDX = [d + 4] (56789101)
    41                                          
    42 00000035 29C8                            sub eax, ecx        ; EAX = EAX - ECX
    43 00000037 83DA00                          sbb edx, 0              ; EDX - 0 - CarryFlag
    44                                      
    45 0000003A 6A00                            push dword 0
    46 0000003C FF15[00000000]                  call [exit]
