     1                                  ; Se da un sir S de dublucuvinte.
     2                                  ; Sa se obtina sirul D format din octetii dublucuvintelor din sirul D sortati in ordine descrescatoare in interpretarea fara semn.
     3                                  ; Exemplu:
     4                                  ; s DD 12345607h, 1A2B3C15h
     5                                  ; d DB 56h, 3Ch, 34h, 2Bh, 1Ah, 15h, 12h, 07h
     6                                  bits 32
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 07563412153C2B1A            s dd 12345607h, 1A2B3C15h
    14                                      len equ ($-s)
    15 00000008 00<rept>                    d times len db 0
    16 00000010 00                          over db 0
    17                                  
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B908000000                      mov ecx, len
    21 00000005 E343                            jecxz final
    22 00000007 FC                              cld
    23 00000008 BE[00000000]                    mov esi, s
    24 0000000D BF[08000000]                    mov edi, d
    25                                          repeta:
    26 00000012 A4                                  movsb
    27 00000013 E2FD                            loop repeta
    28                                          
    29                                          ; sortare a sirului d in ordine descrescatoare
    30                                          while_loop:
    31                                          
    32 00000015 B907000000                          mov ecx, len-1
    33 0000001A E325                                jecxz peste
    34 0000001C FC                                  cld
    35 0000001D BE[08000000]                        mov esi, d
    36 00000022 BF[09000000]                        mov edi, d+1
    37 00000027 C605[10000000]00                    mov byte [over], 0
    38                                              
    39                                              for_loop:
    40 0000002E A6                                      cmpsb
    41 0000002F 7F0E                                    jg end_if
    42                                                  
    43 00000031 4E                                          dec(esi)
    44 00000032 4F                                          dec(edi)
    45 00000033 AC                                          lodsb
    46 00000034 4F                                          dec(edi)
    47 00000035 A4                                          movsb
    48 00000036 4E                                          dec(esi)
    49 00000037 AA                                          stosb
    50 00000038 C605[10000000]01                            mov byte [over], 1
    51                                   
    52                                              end_if:
    53 0000003F E2ED                                loop for_loop
    54                                              
    55                                          peste:
    56                                          
    57 00000041 803D[10000000]00                cmp byte [over], 0
    58 00000048 75CB                            jne while_loop
    59                                          
    60                                      final:
    61 0000004A 6A00                        push dword 0
    62 0000004C FF15[00000000]              call [exit]
