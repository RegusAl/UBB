     1                                  ; Se da un sir S de dublucuvinte.
     2                                  ; Sa se obtina sirul D format din octetii dublucuvintelor din sirul D sortati in ordine crescatoare in interpretarea fara semn.
     3                                  ; Exemplu:
     4                                  ; s DD 12345607h, 1A2B3C15h
     5                                  ; d DB 07h, 12h, 15h, 1Ah, 2Bh, 34h, 3Ch, 56h
     6                                  bits 32
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 07563412153C2B1A            s dd 12345607h, 1A2B3C15h
    14                                      len equ $-s
    15 00000008 00<rept>                    d times len db 0
    16 00000010 00                          over db 0
    17                                  
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B908000000                      mov ecx, len
    21 00000005 FC                              cld
    22 00000006 BE[00000000]                    mov esi, s
    23 0000000B BF[08000000]                    mov edi, d
    24                                          
    25                                          repeta:
    26 00000010 A4                                 movsb 
    27 00000011 E2FD                            loop repeta
    28                                          
    29 00000013 FC                              cld
    30                                          
    31                                          while_loop:
    32                                          
    33 00000014 B907000000                          mov ecx, len-1
    34 00000019 E324                                jecxz end_loop
    35                                          
    36 0000001B BE[08000000]                        mov esi, d
    37 00000020 BF[09000000]                        mov edi, d+1
    38 00000025 C605[10000000]00                    mov byte [over], 0
    39                                              
    40                                              for_loop:
    41 0000002C A6                                      cmpsb
    42 0000002D 7C0E                                    jl end_if
    43                                                  
    44 0000002F 4E                                          dec(esi)
    45 00000030 4F                                          dec(edi)
    46 00000031 AC                                          lodsb
    47 00000032 4F                                          dec(edi)
    48 00000033 A4                                          movsb
    49 00000034 4E                                          dec(esi)
    50 00000035 AA                                          stosb
    51 00000036 C605[10000000]01                            mov byte [over], 1
    52                                                      
    53                                                  end_if:
    54                                              
    55 0000003D E2ED                                loop for_loop
    56                                          
    57                                          end_loop:
    58 0000003F 803D[10000000]00                cmp byte [over], 0
    59 00000046 75CC                            jne while_loop
    60                                      
    61 00000048 6A00                        push dword 0
    62 0000004A FF15[00000000]              call [exit]
