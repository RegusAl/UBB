     1                                  ; Se citeste de la tastatura un cuvant si un numar. Daca numarul este par se cere criptarea cuvantului prin adunarea la fiecare caracter a numarului 20. Daca numarul este impar se cere criptarea cuvantului prin adau
     2                                  ; ex: arici 3 => aparipicipi
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern exit, scanf, printf
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 00000000                    numar dd 0
    14 00000004 00<rept>                    cuvant times 20 db 0
    15 00000018 00<rept>                    cuvant_criptat times 40 db 0
    16 00000040 256400                      format_dec db "%d", 0
    17 00000043 257300                      format_str db "%s", 0
    18 00000046 02000000                    doi dd 2
    19                                      
    20                                  
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24                                      
    25                                          ; citire cuvant
    26 00000000 68[04000000]                    push dword cuvant
    27 00000005 68[43000000]                    push dword format_str
    28 0000000A FF15[00000000]                  call [scanf]
    29 00000010 83C408                          add esp, 2*4
    30                                          
    31                                          ; citire numar
    32 00000013 68[00000000]                    push dword numar
    33 00000018 68[40000000]                    push dword format_dec
    34 0000001D FF15[00000000]                  call [scanf]
    35 00000023 83C408                          add esp, 2*4
    36                                          
    37                                          ; retul va fi in edx
    38 00000026 A1[00000000]                    mov eax, [numar]
    39 0000002B BA00000000                      mov edx, 0
    40 00000030 F735[46000000]                  div dword [doi]
    41                                          
    42 00000036 BE[04000000]                    mov esi, cuvant
    43 0000003B BF00000000                      mov edi, 0
    44 00000040 83FA00                          cmp edx, 0
    45 00000043 7514                            jne impar
    46 00000045 7400                            je par
    47                                          
    48                                          ; daca numarul este par
    49                                          par:
    50                                          
    51 00000047 AC                                  lodsb
    52                                              
    53 00000048 3C00                                cmp al, 0
    54 0000004A 7447                                je gata
    55                                              
    56 0000004C 0414                                add al, 20
    57 0000004E 8887[18000000]                      mov [cuvant_criptat+edi], al
    58 00000054 47                                  inc(edi)
    59                                          
    60 00000055 EBF0                            jmp par
    61                                          
    62 00000057 EB3A                            jmp peste
    63                                          
    64                                          ; daca numarul este impar
    65                                          impar:
    66                                          
    67 00000059 AC                                  lodsb
    68                                              
    69 0000005A 3C00                                cmp al, 0
    70 0000005C 7435                                je gata
    71                                              
    72 0000005E 3C61                                cmp al, 'a'
    73 00000060 7419                                je vocala
    74                                              
    75 00000062 3C65                                cmp al, 'e'
    76 00000064 7415                                je vocala
    77                                              
    78 00000066 3C69                                cmp al, 'i'
    79 00000068 7411                                je vocala
    80                                              
    81 0000006A 3C6F                                cmp al, 'o'
    82 0000006C 740D                                je vocala
    83                                              
    84 0000006E 3C75                                cmp al, 'u'
    85 00000070 7409                                je vocala
    86                                              
    87 00000072 8887[18000000]                      mov [cuvant_criptat+edi], al
    88 00000078 47                                  inc(edi)            
    89 00000079 EBDE                                jmp impar
    90                                              
    91                                              vocala:
    92                                              
    93 0000007B 8887[18000000]                          mov [cuvant_criptat+edi], al
    94 00000081 47                                      inc(edi)
    95 00000082 C687[18000000]70                        mov [cuvant_criptat+edi], byte 'p'
    96 00000089 47                                      inc(edi)
    97 0000008A 8887[18000000]                          mov [cuvant_criptat+edi], al
    98 00000090 47                                      inc(edi)
    99                                          
   100 00000091 EBC6                            jmp impar
   101                                          
   102                                          peste:
   103                                          gata:
   104                                          ; afisam cuvantul criptat
   105 00000093 68[18000000]                    push dword cuvant_criptat
   106 00000098 68[43000000]                    push dword format_str
   107 0000009D FF15[00000000]                  call [printf]
   108 000000A3 83C408                          add esp, 2*4
   109                                      
   110 000000A6 6A00                        push dword 0
   111 000000A8 FF15[00000000]              call [exit]
