     1                                  ; Se da un sir de octeti S. Sa se construiasca sirul D1 ce contine elementele de pe pozitiile pare din S si sirul D2 ce contine elementele de pe pozitiile impare din S.
     2                                  ;   Exemplu:
     3                                  ;   S: 1, 5, 3, 8, 2, 9
     4                                  ;   D1: 1, 3, 2
     5                                  ;   D2: 5, 8, 9
     6                                  bits 32
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 010503080209                s db 1, 5, 3, 8, 2, 9
    14                                      len equ $-s
    15 00000006 00<rept>                    d1 times len db 0
    16 0000000C 00<rept>                    d2 times len db 0
    17                                      
    18                                  segment code use32 class=code 
    19                                      start:
    20 00000000 B906000000                      mov ecx, len
    21 00000005 E330                            jecxz final
    22 00000007 BA00000000                      mov edx, 0
    23 0000000C BE00000000                      mov esi, 0
    24 00000011 BF00000000                      mov edi, 0
    25                                  
    26                                          repeta:
    27 00000016 8A82[00000000]                      mov al, [s+edx]
    28 0000001C F7C201000000                        test edx, 1h
    29 00000022 7409                                je pare
    30 00000024 8887[0C000000]                          mov [d2+edi], al
    31 0000002A 47                                      inc(edi)
    32 0000002B EB07                                    jmp peste
    33                                              pare:
    34 0000002D 8886[06000000]                          mov [d1+esi], al
    35 00000033 46                                      inc(esi)
    36                                          peste:
    37 00000034 42                              inc(edx)
    38 00000035 E2DF                            loop repeta
    39                                       
    40                                      final:
    41 00000037 6A00                        push dword 0
    42 00000039 FF15[00000000]              call [exit]
