     1                                  ; Se dau doua siruri de octeti S1 si S2. Sa se construiasca sirul D prin concatenarea elementelor din sirul S1 luate de la stanga spre dreapta si a elementelor din sirul S2 luate de la dreapta spre stanga.
     2                                  ;   Exemplu:
     3                                  ;       S1: 1, 2, 3, 4
     4                                  ;       S2: 5, 6, 7
     5                                  ;       D: 1, 2, 3, 4, 7, 6, 5
     6                                  bits 32
     7                                  global start
     8                                  
     9                                  extern exit
    10                                  import exit msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 01020304                    s1 db 1, 2, 3, 4
    14                                      len_s1 equ $-s1
    15 00000004 050607                      s2 db 5, 6, 7
    16                                      len_s2 equ $-s2
    17 00000007 00<rept>                    d times (len_s1 + len_s2) db 0
    18                                  
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B904000000                      mov ecx, len_s1
    22 00000005 E330                            jecxz final
    23 00000007 BE00000000                      mov esi, 0
    24 0000000C BF02000000                      mov edi, len_s2-1
    25                                          
    26                                          construire_sir1:
    27 00000011 8A86[00000000]                      mov al, [s1+esi]
    28 00000017 8886[07000000]                      mov [d+esi], al
    29 0000001D 46                                  inc(esi)
    30 0000001E E2F1                            loop construire_sir1
    31                                          
    32 00000020 B903000000                      mov ecx, len_s2
    33 00000025 E310                            jecxz final
    34                                  
    35                                          construire_sir2:
    36 00000027 8A87[04000000]                      mov al, [s2+edi]
    37 0000002D 8886[07000000]                      mov [d+esi], al
    38 00000033 4F                                  dec(edi)
    39 00000034 46                                  inc(esi)
    40 00000035 E2F0                            loop construire_sir2
    41                                       
    42                                          final:
    43                                       
    44 00000037 6A00                        push dword 0
    45 00000039 FF15[00000000]              call [exit]
